"""Initial schema

Revision ID: a9db57c98ae2
Revises: 
Create Date: 2025-05-24 21:32:49.261609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a9db57c98ae2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audio_assessments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('assessment_id', sa.String(length=100), nullable=False),
    sa.Column('driver_id', sa.String(length=100), nullable=False),
    sa.Column('ride_id', sa.String(length=100), nullable=True),
    sa.Column('audio_file_path', sa.String(length=500), nullable=True),
    sa.Column('audio_duration_seconds', sa.Float(), nullable=True),
    sa.Column('audio_format', sa.String(length=10), nullable=True),
    sa.Column('location_lat', sa.Float(), nullable=True),
    sa.Column('location_lng', sa.Float(), nullable=True),
    sa.Column('route_expected', sa.Text(), nullable=True),
    sa.Column('transcribed_text', sa.Text(), nullable=True),
    sa.Column('transcription_confidence', sa.Float(), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=False),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='risklevelenum'), nullable=False),
    sa.Column('threat_text_score', sa.Float(), nullable=True),
    sa.Column('location_risk_index', sa.Float(), nullable=True),
    sa.Column('driver_history_score', sa.Float(), nullable=True),
    sa.Column('action_required', sa.Boolean(), nullable=True),
    sa.Column('push_notification', sa.Text(), nullable=True),
    sa.Column('processing_timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audio_assessments_assessment_id'), 'audio_assessments', ['assessment_id'], unique=True)
    op.create_index(op.f('ix_audio_assessments_driver_id'), 'audio_assessments', ['driver_id'], unique=False)
    op.create_index(op.f('ix_audio_assessments_ride_id'), 'audio_assessments', ['ride_id'], unique=False)
    op.create_table('drivers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('driver_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('risk_history_score', sa.Float(), nullable=True),
    sa.Column('total_rides', sa.Integer(), nullable=True),
    sa.Column('incident_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drivers_driver_id'), 'drivers', ['driver_id'], unique=True)
    op.create_table('incidents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('incident_id', sa.String(length=100), nullable=False),
    sa.Column('evidence_kit_id', sa.String(length=100), nullable=False),
    sa.Column('ride_id', sa.String(length=100), nullable=True),
    sa.Column('passenger_id', sa.String(length=100), nullable=True),
    sa.Column('driver_id', sa.String(length=100), nullable=False),
    sa.Column('assessment_id', sa.String(length=100), nullable=True),
    sa.Column('audio_file_path', sa.String(length=500), nullable=True),
    sa.Column('audio_duration_seconds', sa.Float(), nullable=True),
    sa.Column('full_transcript', sa.Text(), nullable=True),
    sa.Column('primary_category', sa.String(length=100), nullable=False),
    sa.Column('secondary_categories', sa.JSON(), nullable=True),
    sa.Column('severity_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='incidentseverityenum'), nullable=False),
    sa.Column('urgency', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'IMMEDIATE', name='incidenturgencyenum'), nullable=False),
    sa.Column('requires_immediate_action', sa.Boolean(), nullable=True),
    sa.Column('executive_summary', sa.Text(), nullable=False),
    sa.Column('risk_assessment', sa.JSON(), nullable=True),
    sa.Column('recommended_actions', sa.JSON(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=True),
    sa.Column('overall_risk_score', sa.Float(), nullable=False),
    sa.Column('confidence_level', sa.Float(), nullable=False),
    sa.Column('processing_timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('assigned_to', sa.String(length=255), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incidents_assessment_id'), 'incidents', ['assessment_id'], unique=False)
    op.create_index(op.f('ix_incidents_driver_id'), 'incidents', ['driver_id'], unique=False)
    op.create_index(op.f('ix_incidents_evidence_kit_id'), 'incidents', ['evidence_kit_id'], unique=True)
    op.create_index(op.f('ix_incidents_incident_id'), 'incidents', ['incident_id'], unique=True)
    op.create_index(op.f('ix_incidents_passenger_id'), 'incidents', ['passenger_id'], unique=False)
    op.create_index(op.f('ix_incidents_ride_id'), 'incidents', ['ride_id'], unique=False)
    op.create_table('location_risks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('risk_index', sa.Float(), nullable=False),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.Column('incident_count', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('geohash', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_risks_geohash'), 'location_risks', ['geohash'], unique=False)
    op.create_table('passengers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('passenger_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_passengers_passenger_id'), 'passengers', ['passenger_id'], unique=True)
    op.create_table('rides',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ride_id', sa.String(length=100), nullable=False),
    sa.Column('driver_id', sa.String(length=100), nullable=False),
    sa.Column('passenger_id', sa.String(length=100), nullable=False),
    sa.Column('pickup_location', sa.JSON(), nullable=True),
    sa.Column('destination_location', sa.JSON(), nullable=True),
    sa.Column('route_expected', sa.Text(), nullable=True),
    sa.Column('ride_start_time', sa.DateTime(), nullable=True),
    sa.Column('ride_end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rides_driver_id'), 'rides', ['driver_id'], unique=False)
    op.create_index(op.f('ix_rides_passenger_id'), 'rides', ['passenger_id'], unique=False)
    op.create_index(op.f('ix_rides_ride_id'), 'rides', ['ride_id'], unique=True)
    op.create_table('system_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('log_level', sa.String(length=20), nullable=False),
    sa.Column('service', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.String(length=100), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('threat_indicators',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('assessment_id', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=False),
    sa.Column('timestamp_estimate', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threat_indicators_assessment_id'), 'threat_indicators', ['assessment_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_threat_indicators_assessment_id'), table_name='threat_indicators')
    op.drop_table('threat_indicators')
    op.drop_table('system_logs')
    op.drop_index(op.f('ix_rides_ride_id'), table_name='rides')
    op.drop_index(op.f('ix_rides_passenger_id'), table_name='rides')
    op.drop_index(op.f('ix_rides_driver_id'), table_name='rides')
    op.drop_table('rides')
    op.drop_index(op.f('ix_passengers_passenger_id'), table_name='passengers')
    op.drop_table('passengers')
    op.drop_index(op.f('ix_location_risks_geohash'), table_name='location_risks')
    op.drop_table('location_risks')
    op.drop_index(op.f('ix_incidents_ride_id'), table_name='incidents')
    op.drop_index(op.f('ix_incidents_passenger_id'), table_name='incidents')
    op.drop_index(op.f('ix_incidents_incident_id'), table_name='incidents')
    op.drop_index(op.f('ix_incidents_evidence_kit_id'), table_name='incidents')
    op.drop_index(op.f('ix_incidents_driver_id'), table_name='incidents')
    op.drop_index(op.f('ix_incidents_assessment_id'), table_name='incidents')
    op.drop_table('incidents')
    op.drop_index(op.f('ix_drivers_driver_id'), table_name='drivers')
    op.drop_table('drivers')
    op.drop_index(op.f('ix_audio_assessments_ride_id'), table_name='audio_assessments')
    op.drop_index(op.f('ix_audio_assessments_driver_id'), table_name='audio_assessments')
    op.drop_index(op.f('ix_audio_assessments_assessment_id'), table_name='audio_assessments')
    op.drop_table('audio_assessments')
    # ### end Alembic commands ###
